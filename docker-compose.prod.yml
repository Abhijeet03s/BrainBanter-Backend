version: "3.8"

services:
  # Cloud SQL Proxy service
  cloudsql-proxy:
    image: gcr.io/cloudsql-docker/gce-proxy:latest
    command:
      - "/cloud_sql_proxy"
      - "--credential_file=/secrets/brainbanter-sql-key.json"
      - "--instances=gen-lang-client-0138247388:asia-south1:brainbanter-db=tcp:0.0.0.0:5432"
    volumes:
      - ./brainbanter-sql-key.json:/secrets/brainbanter-sql-key.json:ro
    restart: always
    networks:
      - backend-network
    ports:
      - "127.0.0.1:5432:5432" # Only expose to localhost

  # Redis service
  redis:
    image: redis:alpine
    restart: always
    networks:
      - backend-network
    ports:
      - "127.0.0.1:6379:6379"
    volumes:
      - redis-data:/data

  # PgBouncer connection pooler
  pgbouncer:
    image: bitnami/pgbouncer:latest
    depends_on:
      - cloudsql-proxy
    environment:
      - POSTGRESQL_HOST=cloudsql-proxy
      - POSTGRESQL_PORT=5432
      - POSTGRESQL_USERNAME=postgres
      - POSTGRESQL_PASSWORD=${DB_PASSWORD}
      - POSTGRESQL_DATABASE=brainbanter
      - PGBOUNCER_PORT=6432
      - PGBOUNCER_MAX_CLIENT_CONN=200
      - PGBOUNCER_POOL_MODE=transaction
      - PGBOUNCER_DEFAULT_POOL_SIZE=25
    networks:
      - backend-network
    restart: always

  # Main application
  app:
    image: abhijet12/brainbanter-backend:latest
    depends_on:
      - pgbouncer
      - redis
    environment:
      - NODE_ENV=production
      - PORT=8000
      - DATABASE_URL=postgresql://postgres:${DB_PASSWORD}@pgbouncer:6432/brainbanter?schema=public
      - REDIS_URL=redis://redis:6379
      - SUPABASE_URL=${SUPABASE_URL}
      - SUPABASE_KEY=${SUPABASE_KEY}
      - SUPABASE_SERVICE_KEY=${SUPABASE_SERVICE_KEY}
      - GEMINI_API_KEY=${GEMINI_API_KEY}
    ports:
      - "8000:8000"
    restart: always
    networks:
      - backend-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3

networks:
  backend-network:
    driver: bridge

volumes:
  redis-data:
